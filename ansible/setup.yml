---
- name: Setup Nebula Host
  hosts: all
  vars_files:
    - ansible.vault
  vars:
    ansible_user: "{{ remote_user_name }}"
    ansible_sudo_pass: "{{ remote_user_password }}"
  become: true
  tasks:
    - name: Setting timezone to Europe/Berlin
      timezone:
        name: Europe/Berlin

    - name: Disabling admin group sudo permissions
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%admin'
        line: "# %admin ALL=(ALL) ALL"
        validate: 'visudo -cf %s'

    - name: Creating docker group
      group:
        name: docker
        state: present

    - name: Adding Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adding Docker apt Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
        update_cache: yes

    - name: Installing basic apt dependencies
      apt:
        pkg:
          - 'apt-transport-https'
          - 'ca-certificates'
          - 'curl'
          - 'software-properties-common'
          - 'fail2ban'
          - 'ufw'
          - 'unattended-upgrades'
          - 'logwatch'
          - 'zsh'
          - 'vim'
          - 'git'
          - 'docker-ce'
          - 'python3-pip'
          - 'python3-dev'
        state: latest
        update_cache: yes
        cache_valid_time: 3600

    - name: Installing python dependencies
      pip:
        name:
          - 'setuptools'
          - 'docker'
          - 'docker-compose'
        state: present

    - name: Adding {{ remote_user_name }} to groups sudo and docker and change shell to zsh
      user:
        name: "{{ remote_user_name }}"
        groups: sudo,docker
        shell: /bin/zsh
        append: yes
        state: present
        createhome: yes

    - name: Touch a file, using symbolic modes to set the permissions (equivalent to 0644)
      file:
        path: /etc/docker/daemon.json
        state: touch
      when: use_docker_mirror == "true"

    - name: Use docker-cn registry mirror
      lineinfile:
        dest: /etc/docker/daemon.json
        line: '{ "registry-mirrors": ["https://registry.docker-cn.com"] }'
        state: present
        backup: yes
      when: use_docker_mirror == "true"

    - name: Reset current SSH connection to re-evaluate group membership
      meta: reset_connection

    - name: Enabling UFW logging
      ufw:
        logging: "on"

    - name: Adding allow rules to UFW
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      with_items:
        - port: "3000" # Grafana
          proto: "tcp"
        - port: "80" # Grafana
          proto: "tcp"
        - port: "443" # Grafana
          proto: "tcp"

    - name: Rate limit SSH login attempts
      ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Enabling UFW
      ufw:
        state: enabled

    - name: Enabling Public Key Authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PubkeyAuthentication\s+no'
        line: "PubkeyAuthentication yes"
        state: present
        backup: yes

    - name: Disabling Password Authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PasswordAuthentication\s+yes'
        line: "PasswordAuthentication no"
        state: present
        backup: yes

    - name: Disabling root Login
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#\s*)?PermitRootLogin\s+yes'
        line: "PermitRootLogin no"
        state: present
        backup: yes

    - name: Enabling TCP-Forwarding
      blockinfile:
        path: /etc/ssh/sshd_config
        backup: yes
        validate: sshd -t -f %s
        block: |
          Match User {{ remote_user_name }}
            AllowTcpForwarding yes

    - name: Checking SSH configuration
      become: yes
      command: sshd -t
      register: sshd_test
      failed_when: not ( sshd_test.rc == 0 )

    - name: Restarting SSH
      service:
        name: ssh
        state: restarted
